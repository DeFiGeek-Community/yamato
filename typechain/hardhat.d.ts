/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "BasicPlugin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicPlugin__factory>;
    getContractFactory(
      name: "BulksaleDAO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BulksaleDAO__factory>;
    getContractFactory(
      name: "BulksaleV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BulksaleV1__factory>;
    getContractFactory(
      name: "BytesLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BytesLib__factory>;
    getContractFactory(
      name: "Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Factory__factory>;
    getContractFactory(
      name: "IBasicPlugin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasicPlugin__factory>;
    getContractFactory(
      name: "ITemplateContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITemplateContract__factory>;
    getContractFactory(
      name: "OwnableToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableToken__factory>;
    getContractFactory(
      name: "SampleToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SampleToken__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
